{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _Array$from from \"@babel/runtime-corejs2/core-js/array/from\";\nvar _jsxFileName = \"/Users/fabio/Sites/next-initiative-tracker/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Layout from '../components/MyLayout';\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nconst TEST_ENTITIES = [{\n  id: 1,\n  name: \"Rivulet\",\n  initiative: Math.floor(Math.random() * 20) + 1 + 5\n}, {\n  id: 2,\n  name: \"Rimaru\",\n  initiative: Math.floor(Math.random() * 20) + 1 + 4\n}, {\n  id: 3,\n  name: \"Gesh\",\n  initiative: Math.floor(Math.random() * 20) + 1 + 3\n}, {\n  id: 4,\n  name: \"Skytree\",\n  initiative: Math.floor(Math.random() * 20) + 1 + 2\n}, {\n  id: 5,\n  name: \"NPC 1\",\n  initiative: Math.floor(Math.random() * 20) + 1\n}, {\n  id: 6,\n  name: \"NPC 2\",\n  initiative: Math.floor(Math.random() * 20) + 1\n}, {\n  id: 7,\n  name: \"NPC 3\",\n  initiative: Math.floor(Math.random() * 20) + 1\n}, {\n  id: 8,\n  name: \"NPC 4\",\n  initiative: Math.floor(Math.random() * 20) + 1\n}]; // a little function to help us with reordering the result\n\nconst reorder = (list, startIndex, endIndex) => {\n  const result = _Array$from(list);\n\n  const [removed] = result.splice(startIndex, 1);\n  result.splice(endIndex, 0, removed);\n  return result;\n};\n\nconst grid = 8;\n\nconst getItemStyle = (isDragging, draggableStyle) => _objectSpread({\n  // some basic styles to make the items look a bit nicer\n  userSelect: \"none\",\n  padding: grid * 2,\n  margin: `0 0 ${grid}px 0`,\n  // change background colour if dragging\n  background: isDragging ? \"lightgreen\" : \"grey\"\n}, draggableStyle);\n\nconst getListStyle = isDraggingOver => ({\n  background: isDraggingOver ? \"lightblue\" : \"lightgrey\",\n  padding: grid,\n  width: 250\n});\n\nclass InitiativeTracker extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleNameInputChange\", e => {\n      this.setState({\n        nameInput: e.target.value\n      });\n    });\n\n    _defineProperty(this, \"handleInitiativeInputChange\", e => {\n      this.setState({\n        initiativeInput: e.target.value\n      });\n    });\n\n    _defineProperty(this, \"addEntity\", (e, sort) => {\n      e.preventDefault();\n      var newState = {};\n      id = 0;\n      this.state.entities.forEach(el => {\n        if (el.id > id) id = el.id;\n      });\n      id++;\n      newState.entities = this.state.entities.concat({\n        id: id,\n        name: this.state.nameInput,\n        initiative: this.state.initiativeInput\n      });\n\n      if (sort) {\n        newState.entities = this.sortEntities(newState.entities);\n      }\n\n      this.setState(newState);\n    });\n\n    _defineProperty(this, \"sortEntities\", arr => arr.sort((x, y) => {\n      if (x.initiative < y.initiative) {\n        return -1;\n      }\n\n      if (x.initiative > y.initiative) {\n        return 1;\n      }\n\n      return 0;\n    }).reverse());\n\n    _defineProperty(this, \"forward\", () => {\n      var newOrder = this.state.entities;\n      newOrder.push(newOrder.shift());\n      this.setState({\n        entities: newOrder\n      });\n    });\n\n    _defineProperty(this, \"backward\", () => {\n      var newOrder = this.state.entities;\n      newOrder.unshift(newOrder.pop());\n      this.setState({\n        entities: newOrder\n      });\n    });\n\n    this.state = {\n      nameInput: '',\n      initiativeInput: '',\n      entities: []\n    };\n    this.addEntity = this.addEntity.bind(this);\n    this.handleNameInputChange = this.handleNameInputChange.bind(this);\n    this.handleInitiativeInputChange = this.handleInitiativeInputChange.bind(this);\n    this.forward = this.forward.bind(this);\n    this.backward = this.backward.bind(this);\n    this.onDragEnd = this.onDragEnd.bind(this);\n    this.state.entities = this.sortEntities(TEST_ENTITIES);\n  }\n\n  onDragEnd(result) {\n    // dropped outside the list\n    if (!result.destination) {\n      return;\n    }\n\n    const items = reorder(this.state.items, result.source.index, result.destination.index);\n    this.setState({\n      entities: items\n    });\n  }\n\n  render() {\n    var first = true;\n    const items = this.state.entities.map((item, index) => __jsx(Draggable, {\n      key: item.id,\n      draggableId: item.id,\n      index: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, (provided, snapshot) => __jsx(\"div\", _extends({\n      ref: provided.innerRef\n    }, provided.draggableProps, provided.dragHandleProps, {\n      style: getItemStyle(snapshot.isDragging, provided.draggableProps.style),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }), item.content)) // <tr key={key}>\n    //     <td className=\"name\">{item.name}</td>\n    //     <td className=\"initative\">{item.initiative}</td>\n    // </tr>\n    );\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, __jsx(DragDropContext, {\n      onDragEnd: this.onDragEnd,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, __jsx(Droppable, {\n      droppableId: \"droppable\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, (provided, snapshot) => __jsx(\"div\", _extends({}, provided.droppableProps, {\n      ref: provided.innerRef,\n      style: getListStyle(snapshot.isDraggingOver),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }), items, provided.placeholder)))), __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, __jsx(\"button\", {\n      onClick: this.forward,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, \"Advance\"), __jsx(\"button\", {\n      onClick: this.backward,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, \"Go Back\")), __jsx(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, \"Entity Name: \", __jsx(\"input\", {\n      value: this.state.nameInput,\n      onChange: this.handleNameInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    })), __jsx(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, \"Entity Initiative: \", __jsx(\"input\", {\n      value: this.state.initiativeInput,\n      onChange: this.handleInitiativeInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    })), __jsx(\"button\", {\n      onClick: e => this.addEntity(e, true),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, \"Add and Sort\"), __jsx(\"button\", {\n      onClick: e => this.addEntity(e, false),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, \"Add\")));\n  }\n\n}\n\nexport default function Main() {\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236\n    },\n    __self: this\n  }, __jsx(InitiativeTracker, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/fabio/Sites/next-initiative-tracker/pages/index.js"],"names":["Layout","DragDropContext","Droppable","Draggable","TEST_ENTITIES","id","name","initiative","Math","floor","random","reorder","list","startIndex","endIndex","result","removed","splice","grid","getItemStyle","isDragging","draggableStyle","userSelect","padding","margin","background","getListStyle","isDraggingOver","width","InitiativeTracker","React","Component","constructor","props","e","setState","nameInput","target","value","initiativeInput","sort","preventDefault","newState","state","entities","forEach","el","concat","sortEntities","arr","x","y","reverse","newOrder","push","shift","unshift","pop","addEntity","bind","handleNameInputChange","handleInitiativeInputChange","forward","backward","onDragEnd","destination","items","source","index","render","first","map","item","provided","snapshot","innerRef","draggableProps","dragHandleProps","style","content","droppableProps","placeholder","Main"],"mappings":"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","sourcesContent":["import Layout from '../components/MyLayout';\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\n\nconst TEST_ENTITIES = [\n    {\n        id: 1,\n        name: \"Rivulet\",\n        initiative: Math.floor(Math.random() * 20) + 1 + 5,\n    },\n    {\n        id: 2,\n        name: \"Rimaru\",\n        initiative: Math.floor(Math.random() * 20) + 1 + 4,\n    },\n    {\n        id: 3,\n        name: \"Gesh\",\n        initiative: Math.floor(Math.random() * 20) + 1 + 3,\n    },\n    {\n        id: 4,\n        name: \"Skytree\",\n        initiative: Math.floor(Math.random() * 20) + 1 + 2,\n    },\n    {\n        id: 5,\n        name: \"NPC 1\",\n        initiative: Math.floor(Math.random() * 20) + 1,\n    },\n    {\n        id: 6,\n        name: \"NPC 2\",\n        initiative: Math.floor(Math.random() * 20) + 1,\n    },\n    {\n        id: 7,\n        name: \"NPC 3\",\n        initiative: Math.floor(Math.random() * 20) + 1,\n    },\n    {\n        id: 8,\n        name: \"NPC 4\",\n        initiative: Math.floor(Math.random() * 20) + 1,\n    }\n];\n\n// a little function to help us with reordering the result\nconst reorder = (list, startIndex, endIndex) => {\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n\n    return result;\n};\n\nconst grid = 8;\n\nconst getItemStyle = (isDragging, draggableStyle) => ({\n    // some basic styles to make the items look a bit nicer\n    userSelect: \"none\",\n    padding: grid * 2,\n    margin: `0 0 ${grid}px 0`,\n\n    // change background colour if dragging\n    background: isDragging ? \"lightgreen\" : \"grey\",\n\n    // styles we need to apply on draggables\n    ...draggableStyle\n});\n\nconst getListStyle = isDraggingOver => ({\n    background: isDraggingOver ? \"lightblue\" : \"lightgrey\",\n    padding: grid,\n    width: 250\n});\n\nclass InitiativeTracker extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            nameInput: '',\n            initiativeInput: '',\n            entities: [],\n        }\n\n        this.addEntity = this.addEntity.bind(this);\n        this.handleNameInputChange = this.handleNameInputChange.bind(this);\n        this.handleInitiativeInputChange = this.handleInitiativeInputChange.bind(this);\n        this.forward = this.forward.bind(this);\n        this.backward = this.backward.bind(this);\n        this.onDragEnd = this.onDragEnd.bind(this);\n\n        this.state.entities = this.sortEntities(TEST_ENTITIES);\n    }\n\n    handleNameInputChange = (e) => {\n        this.setState({ nameInput: e.target.value });\n    }\n\n    handleInitiativeInputChange = (e) => {\n        this.setState({ initiativeInput: e.target.value });\n    }\n\n    addEntity = (e, sort) => {\n        e.preventDefault();\n        var newState = {};\n        id = 0;\n        this.state.entities.forEach(el => {\n            if (el.id > id) id = el.id;\n        });\n        id++;\n        newState.entities = this.state.entities.concat({\n            id: id,\n            name: this.state.nameInput,\n            initiative: this.state.initiativeInput,\n        });\n        if (sort) {\n            newState.entities = this.sortEntities(newState.entities);\n        }\n        this.setState(newState);\n    }\n\n    sortEntities = arr => (\n        arr.sort((x, y) => {\n            if (x.initiative < y.initiative) {\n                return -1;\n            }\n            if (x.initiative > y.initiative) {\n                return 1;\n            }\n            return 0;\n        }).reverse()\n    )\n\n    forward = () => {\n        var newOrder = this.state.entities;\n        newOrder.push(newOrder.shift());\n        this.setState({ entities: newOrder });\n    }\n\n    backward = () => {\n        var newOrder = this.state.entities;\n        newOrder.unshift(newOrder.pop());\n        this.setState({ entities: newOrder });\n    }\n\n    onDragEnd(result) {\n        // dropped outside the list\n        if (!result.destination) {\n            return;\n        }\n\n        const items = reorder(\n            this.state.items,\n            result.source.index,\n            result.destination.index\n        );\n\n        this.setState({\n            entities: items\n        });\n    }\n\n    render() {\n        var first = true;\n        const items = this.state.entities.map((item, index) => (\n            <Draggable key={item.id} draggableId={item.id} index={index}>\n                {(provided, snapshot) => (\n                    <div\n                        ref={provided.innerRef}\n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                        style={getItemStyle(\n                            snapshot.isDragging,\n                            provided.draggableProps.style\n                        )}\n                    >\n                        {item.content}\n                    </div>\n                )}\n            </Draggable>\n            // <tr key={key}>\n            //     <td className=\"name\">{item.name}</td>\n            //     <td className=\"initative\">{item.initiative}</td>\n            // </tr>\n        ));\n\n        return (\n            <div>\n                <div>\n                    {/* <table className=\"initiative-table\">\n                        <thead>\n                            <th>Name</th>\n                            <th>Initiative</th>\n                        </thead>\n                        <tbody>\n                            {items}\n                        </tbody>\n                    </table> */}\n                    <DragDropContext onDragEnd={this.onDragEnd}>\n                        <Droppable droppableId=\"droppable\">\n                            {(provided, snapshot) => (\n                                <div\n                                    {...provided.droppableProps}\n                                    ref={provided.innerRef}\n                                    style={getListStyle(snapshot.isDraggingOver)}\n                                >\n                                    {items}\n                                    {provided.placeholder}\n                                </div>\n                            )}\n                        </Droppable>\n                    </DragDropContext>\n                </div>\n                <div>\n                    <button onClick={this.forward}>Advance</button>\n                    <button onClick={this.backward}>Go Back</button>\n                </div>\n                <form>\n                    <label>\n                        Entity Name: <input value={this.state.nameInput} onChange={this.handleNameInputChange} />\n                    </label>\n                    <label>\n                        Entity Initiative: <input value={this.state.initiativeInput} onChange={this.handleInitiativeInputChange} />\n                    </label>\n                    <button onClick={(e) => this.addEntity(e, true)}>Add and Sort</button>\n                    <button onClick={(e) => this.addEntity(e, false)}>Add</button>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default function Main() {\n    return (\n        <Layout>\n            <InitiativeTracker></InitiativeTracker>\n        </Layout>\n    );\n}"]},"metadata":{},"sourceType":"module"}