{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _Array$from from \"@babel/runtime-corejs2/core-js/array/from\";\nvar _jsxFileName = \"/Users/fabio/Sites/next-initiative-tracker/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Layout from '../components/MyLayout';\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nvar TEST_ENTITIES = [{\n  name: \"Rivulet\",\n  initiative: Math.floor(Math.random() * 20) + 1 + 5\n}, {\n  name: \"Rimaru\",\n  initiative: Math.floor(Math.random() * 20) + 1 + 4\n}, {\n  name: \"Gesh\",\n  initiative: Math.floor(Math.random() * 20) + 1 + 3\n}, {\n  name: \"Skytree\",\n  initiative: Math.floor(Math.random() * 20) + 1 + 2\n}, {\n  name: \"NPC 1\",\n  initiative: Math.floor(Math.random() * 20) + 1\n}, {\n  name: \"NPC 2\",\n  initiative: Math.floor(Math.random() * 20) + 1\n}, {\n  name: \"NPC 3\",\n  initiative: Math.floor(Math.random() * 20) + 1\n}, {\n  name: \"NPC 4\",\n  initiative: Math.floor(Math.random() * 20) + 1\n}]; // a little function to help us with reordering the result\n\nvar reorder = function reorder(list, startIndex, endIndex) {\n  var result = _Array$from(list);\n\n  var _result$splice = result.splice(startIndex, 1),\n      _result$splice2 = _slicedToArray(_result$splice, 1),\n      removed = _result$splice2[0];\n\n  result.splice(endIndex, 0, removed);\n  return result;\n};\n\nvar grid = 8;\n\nvar getItemStyle = function getItemStyle(isDragging, draggableStyle) {\n  return _objectSpread({\n    // some basic styles to make the items look a bit nicer\n    userSelect: \"none\",\n    padding: grid * 2,\n    margin: \"0 0 \".concat(grid, \"px 0\"),\n    // change background colour if dragging\n    background: isDragging ? \"lightgreen\" : \"grey\"\n  }, draggableStyle);\n};\n\nvar getListStyle = function getListStyle(isDraggingOver) {\n  return {\n    background: isDraggingOver ? \"lightblue\" : \"lightgrey\",\n    padding: grid,\n    width: 250\n  };\n};\n\nvar InitiativeTracker =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(InitiativeTracker, _React$Component);\n\n  function InitiativeTracker(props) {\n    var _this;\n\n    _classCallCheck(this, InitiativeTracker);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(InitiativeTracker).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleNameInputChange\", function (e) {\n      _this.setState({\n        nameInput: e.target.value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleInitiativeInputChange\", function (e) {\n      _this.setState({\n        initiativeInput: e.target.value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"addEntity\", function (e, sort) {\n      e.preventDefault();\n      var newState = {};\n      newState.entities = _this.state.entities.concat({\n        name: _this.state.nameInput,\n        initiative: _this.state.initiativeInput\n      });\n\n      if (sort) {\n        newState.entities = _this.sortEntities(newState.entities);\n      }\n\n      _this.setState(newState);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"sortEntities\", function (arr) {\n      return arr.sort(function (x, y) {\n        if (x.initiative < y.initiative) {\n          return -1;\n        }\n\n        if (x.initiative > y.initiative) {\n          return 1;\n        }\n\n        return 0;\n      }).reverse();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"forward\", function () {\n      var newOrder = _this.state.entities;\n      newOrder.push(newOrder.shift());\n\n      _this.setState({\n        entities: newOrder\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"backward\", function () {\n      var newOrder = _this.state.entities;\n      newOrder.unshift(newOrder.pop());\n\n      _this.setState({\n        entities: newOrder\n      });\n    });\n\n    _this.state = {\n      nameInput: '',\n      initiativeInput: '',\n      entities: []\n    };\n    _this.addEntity = _this.addEntity.bind(_assertThisInitialized(_this));\n    _this.handleNameInputChange = _this.handleNameInputChange.bind(_assertThisInitialized(_this));\n    _this.handleInitiativeInputChange = _this.handleInitiativeInputChange.bind(_assertThisInitialized(_this));\n    _this.forward = _this.forward.bind(_assertThisInitialized(_this));\n    _this.backward = _this.backward.bind(_assertThisInitialized(_this));\n    _this.onDragEnd = _this.onDragEnd.bind(_assertThisInitialized(_this));\n    _this.state.entities = _this.sortEntities(TEST_ENTITIES);\n    return _this;\n  }\n\n  _createClass(InitiativeTracker, [{\n    key: \"onDragEnd\",\n    value: function onDragEnd(result) {\n      // dropped outside the list\n      if (!result.destination) {\n        return;\n      }\n\n      var items = reorder(this.state.items, result.source.index, result.destination.index);\n      this.setState({\n        entities: items\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var first = true;\n      var items = this.state.entities.map(function (item, index) {\n        return __jsx(Draggable, {\n          key: item.id,\n          draggableId: item.id,\n          index: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153\n          },\n          __self: this\n        }, function (provided, snapshot) {\n          return __jsx(\"div\", _extends({\n            ref: provided.innerRef\n          }, provided.draggableProps, provided.dragHandleProps, {\n            style: getItemStyle(snapshot.isDragging, provided.draggableProps.style),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 155\n            },\n            __self: this\n          }), item.content);\n        }) // <tr key={key}>\n        //     <td className=\"name\">{item.name}</td>\n        //     <td className=\"initative\">{item.initiative}</td>\n        // </tr>\n        ;\n      });\n      return __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, __jsx(DragDropContext, {\n        onDragEnd: this.onDragEnd,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, __jsx(Droppable, {\n        droppableId: \"droppable\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, function (provided, snapshot) {\n        return __jsx(\"div\", _extends({}, provided.droppableProps, {\n          ref: provided.innerRef,\n          style: getListStyle(snapshot.isDraggingOver),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 189\n          },\n          __self: this\n        }), items, provided.placeholder);\n      }))), __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, __jsx(\"button\", {\n        onClick: this.forward,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, \"Advance\"), __jsx(\"button\", {\n        onClick: this.backward,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, \"Go Back\")), __jsx(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, __jsx(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, \"Entity Name: \", __jsx(\"input\", {\n        value: this.state.nameInput,\n        onChange: this.handleNameInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      })), __jsx(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, \"Entity Initiative: \", __jsx(\"input\", {\n        value: this.state.initiativeInput,\n        onChange: this.handleInitiativeInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      })), __jsx(\"button\", {\n        onClick: function onClick(e) {\n          return _this2.addEntity(e, true);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, \"Add and Sort\"), __jsx(\"button\", {\n        onClick: function onClick(e) {\n          return _this2.addEntity(e, false);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, \"Add\")));\n    }\n  }]);\n\n  return InitiativeTracker;\n}(React.Component);\n\nexport default function Main() {\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222\n    },\n    __self: this\n  }, __jsx(InitiativeTracker, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/fabio/Sites/next-initiative-tracker/pages/index.js"],"names":["Layout","DragDropContext","Droppable","Draggable","TEST_ENTITIES","name","initiative","Math","floor","random","reorder","list","startIndex","endIndex","result","splice","removed","grid","getItemStyle","isDragging","draggableStyle","userSelect","padding","margin","background","getListStyle","isDraggingOver","width","InitiativeTracker","props","e","setState","nameInput","target","value","initiativeInput","sort","preventDefault","newState","entities","state","concat","sortEntities","arr","x","y","reverse","newOrder","push","shift","unshift","pop","addEntity","bind","handleNameInputChange","handleInitiativeInputChange","forward","backward","onDragEnd","destination","items","source","index","first","map","item","id","provided","snapshot","innerRef","draggableProps","dragHandleProps","style","content","droppableProps","placeholder","React","Component","Main"],"mappings":"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","sourcesContent":["import Layout from '../components/MyLayout';\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\n\nconst TEST_ENTITIES = [\n    {\n        name: \"Rivulet\",\n        initiative: Math.floor(Math.random() * 20) + 1 + 5,\n    },\n    {\n        name: \"Rimaru\",\n        initiative: Math.floor(Math.random() * 20) + 1 + 4,\n    },\n    {\n        name: \"Gesh\",\n        initiative: Math.floor(Math.random() * 20) + 1 + 3,\n    },\n    {\n        name: \"Skytree\",\n        initiative: Math.floor(Math.random() * 20) + 1 + 2,\n    },\n    {\n        name: \"NPC 1\",\n        initiative: Math.floor(Math.random() * 20) + 1,\n    },\n    {\n        name: \"NPC 2\",\n        initiative: Math.floor(Math.random() * 20) + 1,\n    },\n    {\n        name: \"NPC 3\",\n        initiative: Math.floor(Math.random() * 20) + 1,\n    },\n    {\n        name: \"NPC 4\",\n        initiative: Math.floor(Math.random() * 20) + 1,\n    }\n];\n\n// a little function to help us with reordering the result\nconst reorder = (list, startIndex, endIndex) => {\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n\n    return result;\n};\n\nconst grid = 8;\n\nconst getItemStyle = (isDragging, draggableStyle) => ({\n    // some basic styles to make the items look a bit nicer\n    userSelect: \"none\",\n    padding: grid * 2,\n    margin: `0 0 ${grid}px 0`,\n\n    // change background colour if dragging\n    background: isDragging ? \"lightgreen\" : \"grey\",\n\n    // styles we need to apply on draggables\n    ...draggableStyle\n});\n\nconst getListStyle = isDraggingOver => ({\n    background: isDraggingOver ? \"lightblue\" : \"lightgrey\",\n    padding: grid,\n    width: 250\n});\n\nclass InitiativeTracker extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            nameInput: '',\n            initiativeInput: '',\n            entities: [],\n        }\n\n        this.addEntity = this.addEntity.bind(this);\n        this.handleNameInputChange = this.handleNameInputChange.bind(this);\n        this.handleInitiativeInputChange = this.handleInitiativeInputChange.bind(this);\n        this.forward = this.forward.bind(this);\n        this.backward = this.backward.bind(this);\n        this.onDragEnd = this.onDragEnd.bind(this);\n\n        this.state.entities = this.sortEntities(TEST_ENTITIES);\n    }\n\n    handleNameInputChange = (e) => {\n        this.setState({ nameInput: e.target.value });\n    }\n\n    handleInitiativeInputChange = (e) => {\n        this.setState({ initiativeInput: e.target.value });\n    }\n\n    addEntity = (e, sort) => {\n        e.preventDefault();\n        var newState = {};\n        newState.entities = this.state.entities.concat({\n            name: this.state.nameInput,\n            initiative: this.state.initiativeInput,\n        });\n        if (sort) {\n            newState.entities = this.sortEntities(newState.entities);\n        }\n        this.setState(newState);\n    }\n\n    sortEntities = arr => (\n        arr.sort((x, y) => {\n            if (x.initiative < y.initiative) {\n                return -1;\n            }\n            if (x.initiative > y.initiative) {\n                return 1;\n            }\n            return 0;\n        }).reverse()\n    )\n\n    forward = () => {\n        var newOrder = this.state.entities;\n        newOrder.push(newOrder.shift());\n        this.setState({ entities: newOrder });\n    }\n\n    backward = () => {\n        var newOrder = this.state.entities;\n        newOrder.unshift(newOrder.pop());\n        this.setState({ entities: newOrder });\n    }\n\n    onDragEnd(result) {\n        // dropped outside the list\n        if (!result.destination) {\n            return;\n        }\n\n        const items = reorder(\n            this.state.items,\n            result.source.index,\n            result.destination.index\n        );\n\n        this.setState({\n            entities: items\n        });\n    }\n\n    render() {\n        var first = true;\n        const items = this.state.entities.map((item, index) => (\n            <Draggable key={item.id} draggableId={item.id} index={index}>\n                {(provided, snapshot) => (\n                    <div\n                        ref={provided.innerRef}\n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                        style={getItemStyle(\n                            snapshot.isDragging,\n                            provided.draggableProps.style\n                        )}\n                    >\n                        {item.content}\n                    </div>\n                )}\n            </Draggable>\n            // <tr key={key}>\n            //     <td className=\"name\">{item.name}</td>\n            //     <td className=\"initative\">{item.initiative}</td>\n            // </tr>\n        ));\n\n        return (\n            <div>\n                <div>\n                    {/* <table className=\"initiative-table\">\n                        <thead>\n                            <th>Name</th>\n                            <th>Initiative</th>\n                        </thead>\n                        <tbody>\n                            {items}\n                        </tbody>\n                    </table> */}\n                    <DragDropContext onDragEnd={this.onDragEnd}>\n                        <Droppable droppableId=\"droppable\">\n                            {(provided, snapshot) => (\n                                <div\n                                    {...provided.droppableProps}\n                                    ref={provided.innerRef}\n                                    style={getListStyle(snapshot.isDraggingOver)}\n                                >\n                                    {items}\n                                    {provided.placeholder}\n                                </div>\n                            )}\n                        </Droppable>\n                    </DragDropContext>\n                </div>\n                <div>\n                    <button onClick={this.forward}>Advance</button>\n                    <button onClick={this.backward}>Go Back</button>\n                </div>\n                <form>\n                    <label>\n                        Entity Name: <input value={this.state.nameInput} onChange={this.handleNameInputChange} />\n                    </label>\n                    <label>\n                        Entity Initiative: <input value={this.state.initiativeInput} onChange={this.handleInitiativeInputChange} />\n                    </label>\n                    <button onClick={(e) => this.addEntity(e, true)}>Add and Sort</button>\n                    <button onClick={(e) => this.addEntity(e, false)}>Add</button>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default function Main() {\n    return (\n        <Layout>\n            <InitiativeTracker></InitiativeTracker>\n        </Layout>\n    );\n}"]},"metadata":{},"sourceType":"module"}