{"version":3,"file":"static/webpack/static/development/pages/index.js.6d33a73dd61ebc9b51b0.hot-update.js","sources":["webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/define-properties.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/get-own-property-descriptors.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/get-own-property-symbols.js","webpack:///./node_modules/core-js/library/fn/object/define-properties.js","webpack:///./node_modules/core-js/library/fn/object/get-own-property-descriptors.js","webpack:///./node_modules/core-js/library/fn/object/get-own-property-symbols.js","webpack:///./node_modules/core-js/library/modules/_own-keys.js","webpack:///./node_modules/core-js/library/modules/es6.object.define-properties.js","webpack:///./node_modules/core-js/library/modules/es7.object.get-own-property-descriptors.js","webpack:///./pages/index.js"],"sourcesContent":["module.exports = require(\"core-js/library/fn/object/define-properties\");","module.exports = require(\"core-js/library/fn/object/get-own-property-descriptors\");","module.exports = require(\"core-js/library/fn/object/get-own-property-symbols\");","require('../../modules/es6.object.define-properties');\nvar $Object = require('../../modules/_core').Object;\nmodule.exports = function defineProperties(T, D) {\n  return $Object.defineProperties(T, D);\n};\n","require('../../modules/es7.object.get-own-property-descriptors');\nmodule.exports = require('../../modules/_core').Object.getOwnPropertyDescriptors;\n","require('../../modules/es6.symbol');\nmodule.exports = require('../../modules/_core').Object.getOwnPropertySymbols;\n","// all object keys, includes non-enumerable and symbols\nvar gOPN = require('./_object-gopn');\nvar gOPS = require('./_object-gops');\nvar anObject = require('./_an-object');\nvar Reflect = require('./_global').Reflect;\nmodule.exports = Reflect && Reflect.ownKeys || function ownKeys(it) {\n  var keys = gOPN.f(anObject(it));\n  var getSymbols = gOPS.f;\n  return getSymbols ? keys.concat(getSymbols(it)) : keys;\n};\n","var $export = require('./_export');\n// 19.1.2.3 / 15.2.3.7 Object.defineProperties(O, Properties)\n$export($export.S + $export.F * !require('./_descriptors'), 'Object', { defineProperties: require('./_object-dps') });\n","// https://github.com/tc39/proposal-object-getownpropertydescriptors\nvar $export = require('./_export');\nvar ownKeys = require('./_own-keys');\nvar toIObject = require('./_to-iobject');\nvar gOPD = require('./_object-gopd');\nvar createProperty = require('./_create-property');\n\n$export($export.S, 'Object', {\n  getOwnPropertyDescriptors: function getOwnPropertyDescriptors(object) {\n    var O = toIObject(object);\n    var getDesc = gOPD.f;\n    var keys = ownKeys(O);\n    var result = {};\n    var i = 0;\n    var key, desc;\n    while (keys.length > i) {\n      desc = getDesc(O, key = keys[i++]);\n      if (desc !== undefined) createProperty(result, key, desc);\n    }\n    return result;\n  }\n});\n","import Layout from '../components/MyLayout';\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\n\nconst TEST_ENTITIES = [\n    {\n        name: \"Rivulet\",\n        initiative: Math.floor(Math.random() * 20) + 1 + 5,\n    },\n    {\n        name: \"Rimaru\",\n        initiative: Math.floor(Math.random() * 20) + 1 + 4,\n    },\n    {\n        name: \"Gesh\",\n        initiative: Math.floor(Math.random() * 20) + 1 + 3,\n    },\n    {\n        name: \"Skytree\",\n        initiative: Math.floor(Math.random() * 20) + 1 + 2,\n    },\n    {\n        name: \"NPC 1\",\n        initiative: Math.floor(Math.random() * 20) + 1,\n    },\n    {\n        name: \"NPC 2\",\n        initiative: Math.floor(Math.random() * 20) + 1,\n    },\n    {\n        name: \"NPC 3\",\n        initiative: Math.floor(Math.random() * 20) + 1,\n    },\n    {\n        name: \"NPC 4\",\n        initiative: Math.floor(Math.random() * 20) + 1,\n    }\n];\n\n// a little function to help us with reordering the result\nconst reorder = (list, startIndex, endIndex) => {\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n\n    return result;\n};\n\nconst grid = 8;\n\nconst getItemStyle = (isDragging, draggableStyle) => ({\n    // some basic styles to make the items look a bit nicer\n    userSelect: \"none\",\n    padding: grid * 2,\n    margin: `0 0 ${grid}px 0`,\n\n    // change background colour if dragging\n    background: isDragging ? \"lightgreen\" : \"grey\",\n\n    // styles we need to apply on draggables\n    ...draggableStyle\n});\n\nconst getListStyle = isDraggingOver => ({\n    background: isDraggingOver ? \"lightblue\" : \"lightgrey\",\n    padding: grid,\n    width: 250\n});\n\nclass InitiativeTracker extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            nameInput: '',\n            initiativeInput: '',\n            entities: [],\n        }\n\n        this.addEntity = this.addEntity.bind(this);\n        this.handleNameInputChange = this.handleNameInputChange.bind(this);\n        this.handleInitiativeInputChange = this.handleInitiativeInputChange.bind(this);\n        this.forward = this.forward.bind(this);\n        this.backward = this.backward.bind(this);\n        this.onDragEnd = this.onDragEnd.bind(this);\n\n        this.state.entities = this.sortEntities(TEST_ENTITIES);\n    }\n\n    handleNameInputChange = (e) => {\n        this.setState({ nameInput: e.target.value });\n    }\n\n    handleInitiativeInputChange = (e) => {\n        this.setState({ initiativeInput: e.target.value });\n    }\n\n    addEntity = (e, sort) => {\n        e.preventDefault();\n        var newState = {};\n        newState.entities = this.state.entities.concat({\n            name: this.state.nameInput,\n            initiative: this.state.initiativeInput,\n        });\n        if (sort) {\n            newState.entities = this.sortEntities(newState.entities);\n        }\n        this.setState(newState);\n    }\n\n    sortEntities = arr => (\n        arr.sort((x, y) => {\n            if (x.initiative < y.initiative) {\n                return -1;\n            }\n            if (x.initiative > y.initiative) {\n                return 1;\n            }\n            return 0;\n        }).reverse()\n    )\n\n    forward = () => {\n        var newOrder = this.state.entities;\n        newOrder.push(newOrder.shift());\n        this.setState({ entities: newOrder });\n    }\n\n    backward = () => {\n        var newOrder = this.state.entities;\n        newOrder.unshift(newOrder.pop());\n        this.setState({ entities: newOrder });\n    }\n\n    onDragEnd(result) {\n        // dropped outside the list\n        if (!result.destination) {\n            return;\n        }\n\n        const items = reorder(\n            this.state.items,\n            result.source.index,\n            result.destination.index\n        );\n\n        this.setState({\n            entities: items\n        });\n    }\n\n    render() {\n        var first = true;\n        const items = this.state.entities.map((item, index) => (\n            <Draggable key={item.id} draggableId={item.id} index={index}>\n                {(provided, snapshot) => (\n                    <div\n                        ref={provided.innerRef}\n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                        style={getItemStyle(\n                            snapshot.isDragging,\n                            provided.draggableProps.style\n                        )}\n                    >\n                        {item.content}\n                    </div>\n                )}\n            </Draggable>\n            // <tr key={key}>\n            //     <td className=\"name\">{item.name}</td>\n            //     <td className=\"initative\">{item.initiative}</td>\n            // </tr>\n        ));\n\n        return (\n            <div>\n                <div>\n                    {/* <table className=\"initiative-table\">\n                        <thead>\n                            <th>Name</th>\n                            <th>Initiative</th>\n                        </thead>\n                        <tbody>\n                            {items}\n                        </tbody>\n                    </table> */}\n                    <DragDropContext onDragEnd={this.onDragEnd}>\n                        <Droppable droppableId=\"droppable\">\n                            {(provided, snapshot) => (\n                                <div\n                                    {...provided.droppableProps}\n                                    ref={provided.innerRef}\n                                    style={getListStyle(snapshot.isDraggingOver)}\n                                >\n                                    {items}\n                                    {provided.placeholder}\n                                </div>\n                            )}\n                        </Droppable>\n                    </DragDropContext>\n                </div>\n                <div>\n                    <button onClick={this.forward}>Advance</button>\n                    <button onClick={this.backward}>Go Back</button>\n                </div>\n                <form>\n                    <label>\n                        Entity Name: <input value={this.state.nameInput} onChange={this.handleNameInputChange} />\n                    </label>\n                    <label>\n                        Entity Initiative: <input value={this.state.initiativeInput} onChange={this.handleInitiativeInputChange} />\n                    </label>\n                    <button onClick={(e) => this.addEntity(e, true)}>Add and Sort</button>\n                    <button onClick={(e) => this.addEntity(e, false)}>Add</button>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default function Main() {\n    return (\n        <Layout>\n            <InitiativeTracker></InitiativeTracker>\n        </Layout>\n    );\n}"],"mappings":";;;;;;;;;AAAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACJA;AACA;;;;;;;;;;;;ACDA;AACA;;;;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACTA;AACA;AACA;;;;;;;;;;;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrBA;AACA;AAEA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AACA;AAMA;AACA;AACA;AAFA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAPA;AAAA;AACA;AAYA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AACA;AAKA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAmBA;AAAA;AAAA;AACA;AACA;AArBA;AAuBA;AAAA;AAAA;AACA;AACA;AAzBA;AA2BA;AACA;AACA;AACA;AACA;AAFA;AACA;AAGA;AACA;AACA;AACA;AAAA;AACA;AACA;AAtCA;AAuCA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AATA;AACA;AAxCA;AAoDA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAxDA;AA0DA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AA5DA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AACA;AAEA;AAfA;AAgBA;AACA;;;AA8CA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AADA;AAGA;;;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AADA;AAIA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAeA;AACA;AACA;AAnBA;AAAA;AAsBA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AApJA;AACA;AAsJA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;A","sourceRoot":""}